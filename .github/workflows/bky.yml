name: Build HK1 img80+o and 80+
on:
  workflow_dispatch:
    inputs:
      again-fork:
        description: 'build'
        required: false
        default: 'build'

env:
  REPO_TOKEN: ${{ secrets.REPO_TOKEN }}
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-20.04
    name: Build for ${{ matrix.flippy_name }}

    env:
      FLIPPY_NAME: ${{ matrix.flippy_name }}   
      RELEASE_NAME: ${{ matrix.release_name }}
    steps:
    - name: Checkout
      uses: actions/checkout@main
      
    - name: Initialization environment
      run: |     
        version=$(curl -s "https://api.github.com/repos/unless/build-actions/releases/latest" | awk -F '"' '/tag_name/{print $4}')
        version1=$(curl -s "https://api.github.com/repos/unless/build-actions/releases/latest" | grep name |awk -F '"' '/-Lede-armvirt-64-default-rootfs.tar.gz/{print $4}')
        wget https://github.com/unless/build-actions/releases/download/$version/$version1
        mv $version1 openwrt-armvirt-64-default-rootfs.tar.gz
        ls
        pwd
        echo "version=$version"  >> $GITHUB_ENV
        echo "version1=$version1"  >> $GITHUB_ENV
        echo "DATE=$(date "+%Y-%m-%d %H:%M:%S")"  >> $GITHUB_ENV
        mkdir opp


    - name: Package Armvirt as OpenWrt
      uses: unifreq/openwrt_packit@master
      env:
        OPENWRT_ARMVIRT: openwrt-armvirt-64-default-rootfs.tar.gz
        PACKAGE_SOC: beikeyun
        KERNEL_VERSION_NAME: 6.1.1
        GH_TOKEN: ${{ secrets.GH_TOKEN }}
        
    - name: Upload OpenWrt Firmware to Release
      uses: ncipollo/release-action@main
      with:
          tag: openwrt_armvirt_v8_${{ env.PACKAGED_OUTPUTDATE }}
          artifacts: ${{ env.PACKAGED_OUTPUTPATH }}/*
          allowUpdates: true
          token: ${{ secrets.GH_TOKEN }}
          body: |


    - name: Upload firmware to WeTransfer
      if: ${{ env.PACKAGED_STATUS }} == 'success' && !cancelled()
      run: |
        env
        echo ${{ env.PACKAGED_OUTPUTPATH }} 
        ls
        pwd
        curl -fsSL git.io/file-transfer | sh
        ./transfer wet -s -p 16 --no-progress /opt/openwrt_packit/output 2>&1 | tee wetransfer.log
        echo "##### WETRANSFER：$(cat wetransfer.log | grep https | cut -f3 -d" ")" >> update_log.txt
        sed -i "s/Download Link/WETRANSFER/g" wetransfer.log
        echo "::warning file=wetransfer.com::$(cat wetransfer.log | grep https)"
  
  over:
    needs: [build]
    runs-on: ubuntu-20.04
    steps:
    - name: TG notification #TG推送
      run: curl "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage" -d "chat_id=${{ secrets.TELEGRAM_CHAT_ID }}&text=HK180+0和HK180+打包成功"
