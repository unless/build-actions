name: Build HK1 img80+o and 80+
on:
  workflow_dispatch:
    inputs:
      again-fork:
        description: 'build'
        required: false
        default: 'build'

env:
  REPO_TOKEN: ${{ secrets.REPO_TOKEN }}
  TZ: Asia/Shanghai


jobs:
  build:
    runs-on: ubuntu-20.04
    name: Build for ${{ matrix.flippy_name }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - flippy_name: 80+o
            release_name: HK1-jcnf-mini-80+o.img
          - flippy_name: 80+
            release_name: HK1-jcnf-mini-80+.img

    env:
      FLIPPY_NAME: ${{ matrix.flippy_name }}   
      RELEASE_NAME: ${{ matrix.release_name }}
    steps:
    - name: Checkout
      uses: actions/checkout@main
      
    - name: Initialization environment
      run: |     
        version=$(curl -s "https://api.github.com/repos/unless/build-actions/releases/latest" | awk -F '"' '/tag_name/{print $4}')
        version1=$(curl -s "https://api.github.com/repos/unless/build-actions/releases/latest" | grep name |awk -F '"' '/-Lede-armvirt-64-default-rootfs.tar.gz/{print $4}')
        wget https://github.com/unless/build-actions/releases/download/$version/$version1
        echo "version=$version"  >> $GITHUB_ENV
        echo "version1=$version1"  >> $GITHUB_ENV
        echo "DATE=$(date "+%Y-%m-%d %H:%M:%S")"  >> $GITHUB_ENV

    - name: Package OpenWrt Firmware
      uses: ophub/flippy-openwrt-actions@main
      env:
        OPENWRT_ARMVIRT: openwrt-armvirt-64-default-rootfs.tar.gz
        PACKAGE_SOC: rk3328
        KERNEL_VERSION_NAME: 6.1.1

    - name: Upload firmware to WeTransfer
      if: steps.gz.outputs.status == 'success' && env.UPLOAD_COWTRANSFER == 'true' && !cancelled()
      run: |
        curl -fsSL git.io/file-transfer | sh
        ./transfer cow --block 2621440 -s -p 64 --no-progress ${{ env.PACKAGED_OUTPUTPATH }} 2>&1 | tee cowtransfer.log
        echo "::warning file=cowtransfer.com::$(cat cowtransfer.log | grep https)"
        echo "::set-output name=url::$(cat cowtransfer.log | grep https | cut -f3 -d" ")"
        
  
  over:
    needs: [build]
    runs-on: ubuntu-20.04
    steps:
    - name: TG notification #TG推送
      run: curl "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage" -d "chat_id=${{ secrets.TELEGRAM_CHAT_ID }}&text=HK180+0和HK180+打包成功"
